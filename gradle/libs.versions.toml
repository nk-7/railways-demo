[versions]
spring-boot = "3.4.3"
spring-cloud = "2024.0.0"
slf4j = "2.0.16"
logback = "1.5.8"
junit = "5.12.0"
assertj = "3.26.3"
testcontainers = "1.20.5"
jackson = "2.18.2"
tinkoff = "1.30"
akka = "2.6.21"
djl = "0.32.0"
ta4j = "0.17"

[libraries]
#BOMs
bom-spring-boot = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
bom-spring-cloud = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud" }
bom-junit = { module = "org.junit:junit-bom", version.ref = "junit" }
bom-testcontainers = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
bom-jackson = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
bom-akka = { module = "com.typesafe.akka:akka-bom_2.13", version.ref = "akka" }
bom-djl = { module = "ai.djl:bom", version.ref = "djl" }

#Spring
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-starter-data-neo4j = { module = "org.springframework.boot:spring-boot-starter-data-neo4j" }
spring-data-r2dbc = { module = "org.springframework.data:spring-data-r2dbc" }
spring-data-jdbc = { module = "org.springframework.data:spring-data-jdbc" }

# Databases
database-hikari = { module = "com.zaxxer:HikariCP" }
database-sqlite = { module = "org.xerial:sqlite-jdbc" }
database-liquibase = { module = "org.liquibase:liquibase-core" }
database-h2 = { module = "com.h2database:h2" }

#Logging
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Akka
akka-actor-typed = { module = "com.typesafe.akka:akka-actor-typed_2.13" }
akka-stream-typed = { module = "com.typesafe.akka:akka-stream-typed_2.13" }
akka-testkit-typed = { module = "com.typesafe.akka:akka-actor-testkit-typed_2.13" }

# DJL

# Tech analisys
ta4j-core = { module = "org.ta4j:ta4j-core", version.ref = "ta4j" }


# Test
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params" }
junit-jupiter-launcher = { module = "org.junit.platform:junit-platform-launcher" }

testcontainers = { module = "org.testcontainers:testcntainers" }
testcontainers-r2dbc = { module = "org.testcontainers:r2dbc" }

# Commons
commons-lang3 = { module = "org.apache.commons:commons-lang3" }
commons-text = { module = "org.apache.commons:commons-text" }

#Tinkoff
tinkoff-java-sdk-core = { module = "ru.tinkoff.piapi:java-sdk-core", version.ref = "tinkoff" }


kafka-clients = { module = "org.apache.kafka:kafka-clients" }


jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }


[plugins]

spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }

[bundles]
test = [
    "assertj",
    "junit-jupiter",
    "junit-jupiter-engine",
    "junit-jupiter-params"
]
